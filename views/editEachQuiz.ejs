<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Quiz</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <link rel="stylesheet" href="/css/getMoreAddContent.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.2/font/bootstrap-icons.min.css">
    <!-- <link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css"> -->

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/@fancyapps/ui@5.0/dist/fancybox/fancybox.umd.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@fancyapps/ui@5.0/dist/fancybox/fancybox.css" />
    <script src="https://unpkg.com/aos@2.3.1/dist/aos.js"></script>
    <link href="https://unpkg.com/aos@2.3.1/dist/aos.css" rel="stylesheet">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Sortable/1.14.0/Sortable.min.js"></script>



    <style>
        @import url('https://fonts.googleapis.com/css2?family=Noto+Sans+Thai:wght@100..900&display=swap');

        * {
            font-family: "Noto Sans Thai", sans-serif !important;
        }

        .header {
            margin: 0 !important;
            padding: 0 !important;
        }

        html {
            scroll-behavior: smooth !important;
        }

        body {
            margin: 0px;
        }

        .center {
            display: inline;
            margin: 3px;
        }

        .form-input {
            width: 100px;
            padding: 3px;
            background: #fff;
            border: 2px dashed dodgerblue;
        }

        .form-input input {
            display: none;
        }

        .form-input label {
            display: block;
            width: 100px;
            height: auto;
            max-height: 100px;
            background: #333;
            border-radius: 10px;
            cursor: pointer;
        }

        .form-input img {
            width: 100px;
            height: 100px;
            margin: 2px;
            opacity: .4;
        }

        .imgRemove {
            position: relative;
            bottom: 114px;
            left: 68%;
            background-color: transparent;
            border: none;
            font-size: 30px;
            outline: none;
        }

        .imgRemove::after {
            content: ' \21BA';
            color: #fff;
            font-weight: 900;
            border-radius: 8px;
            cursor: pointer;
        }

        .small {
            color: firebrick;
        }

        .image {
            max-width: 100%;
            max-height: 100%;
        }

        #required {
            display: inline-block;
            position: absolute;
            right: 10px;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        :root {
            --background: #e5e8eb;
            --forground: #2882a5;
        }

        body,
        .screenshot {
            background-color: var(--background);
        }

        input {
            outline: none;
            border: none;
            width: 100%;
        }

        input:hover {
            border-bottom: 1px solid lightgray;

        }

        input:focus,
        .dark .input:focus {
            border-bottom: 2px solid rgb(103, 58, 183) !important;
        }

        .dark input:hover {
            border-bottom: 1px solid #444;
        }

        form {
            width: 78%;
            margin-bottom: 100px;
        }

        .form-control {
            width: 33%;
        }

        textarea .form-control {
            border: none;
            border-bottom: 1px solid lightgray;
        }

        .answer_key input {
            width: 10%;
        }

        .container {
            display: flex;
            margin-top: 12px;
            width: 200%;
            justify-content: center;
        }

        .question {
            background-color: white;
            margin: 30px;
            padding: 41px;
            border-radius: 14px;
            position: relative;
            border-left: 6px solid #ffffff;

        }

        .dark .question {
            background-color: #333;
            border-left: 6px solid #333;
        }

        .question_option-prop,
        .dark .question_option-prop {
            border-left: 6px solid rgb(103, 58, 183);

        }

        .first {
            display: flex;
            flex-direction: row;
            justify-content: space-between;

            /* align-items: center; */
        }

        .double_item {
            display: inline-block;
            padding: 3px;
            text-decoration: none;
            /* margin: 0 24px; */
            margin-bottom: 1rem;
        }

        .double_item:hover {
            text-decoration: underline;
            border-radius: 7px;

        }

        .options {
            padding-top: 8px;
            padding-bottom: 8px;
            display: flex;
            flex-direction: column;
        }

        .options input {
            margin: 4px;
            margin-top: 19px;
            border-top: 0px;
            border-right: 0px;
            border-left: 0px;

        }

        .dark .options input {
            background-color: #333;
            color: var(--text-color);

        }

        .description_class {
            display: flex;
            flex-direction: column;
        }

        .description_class :first-child {
            padding-bottom: 15px;
            margin-bottom: 27px;
            border: none;
            border-bottom: 1px solid gray;
        }

        select.description_class:first-child:focus {
            outline: none;
            box-shadow: none !important;
        }

        .description_class :last-child {
            outline: none;
            border: none;
        }

        .footer {
            background-color: #F8F9FA;
        }

        .answer_key {
            margin-top: 20px;
            text-decoration: none;
        }

        .answer_key:hover {
            text-decoration: underline;
        }

        .input_check {
            margin: 0px;
            display: inline-block;
            width: 3%;
            padding: 0px;
        }

        .setting_menu {
            margin-left: 20px;
            background-color: white;
            width: 80%;
            height: 440px;
            border-radius: 10px;
        }

        .addition {
            background-color: white;
        }



        /* on off  */
        .switch {
            position: relative;
            display: inline-block;
            width: 48px;
            height: 25px;
        }

        .switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }

        .slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 6px;
            right: -5px;
            bottom: 0;
            background-color: #ccc;
            -webkit-transition: .4s;
            transition: .4s;
        }

        .slider:before {
            position: absolute;
            content: "";
            height: 17px;
            width: 18px;
            left: 1px;
            bottom: 4px;
            background-color: white;
            -webkit-transition: .4s;
            transition: .4s;
        }

        input:checked+.slider {
            background-color: #2196F3;
        }

        input:focus+.slider {
            box-shadow: 0 0 1px #2196F3;
        }

        input:checked+.slider:before {
            -webkit-transform: translateX(26px);
            -ms-transform: translateX(26px);
            transform: translateX(26px);
        }

        /* Rounded sliders */
        .slider.round {
            border-radius: 34px;
        }

        .slider.round:before {
            border-radius: 50%;
        }

        .imagebutton {
            padding: 11px;
            margin-left: 14px;
            margin-right: 9px;
        }

        .dark .imagebutton {
            color: white;
        }

        .embed-responsive {
            width: 63%;

        }

        /* hover  */
        .Hover-effect {
            position: relative;
        }

        :root {
            --underline_color: red;
            --underline-hight: 0.175rem;
        }

        .Hover-effect::after {
            content: "";
            position: absolute;
            width: 100%;
            height: var(--underline-hight);
            background-color: var(--underline_color);
            left: 0;
            bottom: 0;
            transform: scale(0, 1);
            transition: transform 0.3s ease;
        }


        .active-container::after {
            transform: scale(1, 1);
        }


        .Hover-effect:hover::after {
            transform: scale(1, 1);
        }



        .svgloader {
            display: block;
            width: 30%;
            margin: 0 auto;
        }

        .videobut {
            padding: 9px;
            margin-right: 8px;
        }

        .videoicon {
            padding: 0px;
            height: 19px;
            width: 24px;
        }

        * {
            box-sizing: border-box !important;
        }

        .card-1,
        .card-body-1 {
            border: none !important;
        }

        .descp {
            text-indent: 2em;
            margin: 0 2em;
        }

        .rectangle-141 {
            background-color: white;
            border-radius: 0.75em;
            box-shadow: 0em 0.75em 1.5em -0.25em #919eab1f, 0em 0em 0.125em #919eab33;
            height: 14.6875em;
            width: 75%;
            margin: 2em 2em;
        }

        .home-div,
        .a-home {
            color: #999999 !important;
        }

        .above-nav {
            background-color: white !important;
            border-bottom: 1px solid #999999;
        }

        .dark .above-nav-status {
            background-color: #333 !important;
            border-right: 1px solid #494949;
        }

        .status-a {
            color: #404258 !important;
        }

        .list-lesson-p {
            color: #8A2BE2;
        }

        .list-lesson-p-span {
            color: #4B0082;
        }

        .each-lesson {
            border-top: 0.1em solid #8A2BE2;
        }

        .aside-right {
            background-color: var(--bg-color) !important;
            height: 100%;
        }

        .manange-bar {
            border-radius: 0.5em;
            justify-content: space-between !important;

        }


        .lesson-content {
            height: fit-content !important;
            border-radius: 1em !important;
            justify-content: center !important;
        }

        .dark .manange-bar,
        .dark .lesson-content {
            background-color: #333 !important;
        }

        .lesson-nothing {
            margin: 25% 0 !important;
            padding: 0 !important;
        }

        .each-lesson-a {
            text-decoration: none !important;
        }

        .each-lesson-a:hover .each-lesson {
            border-left: 0.2em solid #8A2BE2 !important;
        }

        .card-img-top {
            box-shadow: rgba(0, 0, 0, 0.15) 1.95px 1.95px 2.6px !important;
        }

        .setColumn {
            display: grid !important;
            grid-template-columns: 1fr 1fr 1fr !important;
        }

        .card-a {
            text-decoration: none !important;
        }

        .card-a:hover,
        .card-a:hover .p-lesson-name {
            color: #007bff !important;
            transition: 0.5s;
        }

        .card-a:hover .bi-book {
            color: #007bff !important;
            transition: color 0.5s;
        }

        .bi-book-fill {
            display: none;
        }

        .card-a:hover .bi-book-fill {
            display: inline-block !important;
            transition: 0.5s;
        }

        .card-a:hover .bi-book {
            display: none;
            transition: 0.5s;
        }

        .manange-bar,
        .lesson-content {
            box-shadow: rgba(50, 50, 93, 0.25) 0px 2px 5px -1px !important;
            border-radius: 0.5em;
        }

        .card-1 {
            width: 90% !important;
            height: fit-content !important;
            transition: all 0.8s cubic-bezier(0.15, 0.83, 0.66, 1);
            cursor: pointer;
            border-radius: 0.5em;
            box-shadow: rgba(50, 50, 93, 0.25) 0px 2px 5px -1px !important;
        }

        .dark .card-1 {
            box-shadow: lightgray 0px 2px 5px -1px !important;
        }

        .card-1:hover {
            transform: scale(1.05);
        }

        .card-header {
            border-right: 1px solid #EAEFF4;
            border-bottom: 1px solid #EAEFF4;
        }

        .a-list-3,
        .bi-3 {
            color: #8A2BE2 !important;
        }



        #yearSelector {
            border-color: #EAEFF4;
            border-radius: 0.5em;
            background-color: white !important;
            font-size: smaller;
            padding: 0.5em !important;
        }

        #yearSelector option {
            color: #404258;
            background-color: white !important;

        }

        /* .set-border {
      border-bottom: 1px solid #EAEFF4;
      padding-bottom: 1em !important;

    } */

        .set-border-bottom {
            border-bottom: 1px solid #EAEFF4;
            margin-bottom: 1em !important;

        }

        .lesson-bar {
            border-left: 0.25em solid #007bff !important;
            padding-left: 0.5em !important;
            margin-right: 0.5em !important;

        }

        .a-add {
            color: #007bff !important;
        }

        .a-add:hover {
            color: #0053ac !important;
        }

        .descp {
            text-indent: 2em;
            margin: 0 2em;
        }

        .rectangle-141 {
            background-color: white;
            border-radius: 0.75em;
            box-shadow: 0em 0.75em 1.5em -0.25em #919eab1f, 0em 0em 0.125em #919eab33;
            height: 14.6875em;
            left: 4.6875em;
            top: 37.3125em;
            width: 39.125em;
            width: 75%;
            margin: 2em 2em;
        }

        .home-div,
        .a-home {
            color: #999999 !important;
        }

        .above-nav {
            background-color: #dde6ed33;
        }

        .status-a {
            color: #404258 !important;
        }

        .list-lesson-p {
            color: #8A2BE2;

        }

        .list-lesson-p-span {
            color: #4B0082;
        }

        .each-lesson {
            border-top: 0.1em solid #8A2BE2;

        }

        .aside-right {
            background-color: #dde6ed1a;
            height: 100%;
        }

        .manange-bar {
            border-radius: 1em;
            /* grid-template-columns: 1fr 1fr; */
            /* justify-content: space-between !important; */

        }


        .main-content {
            height: 100%;
        }





        .subDes,
        .subDesNumber2 {
            border: none !important;
        }



        #file-input {
            display: none !important;
        }

        .center {
            display: flex;
            justify-content: center;
            align-items: center;
            height: ฟ;
            /* ทำให้สูงเต็มหน้าจอ */
        }

        video {
            border-radius: 0.5em;
            box-shadow: rgba(67, 71, 85, 0.27) 0px 0px 0.25em, rgba(90, 125, 188, 0.05) 0px 0.25em 1em;

        }



        .content-2 {
            border-top: 0.5em solid #8A2BE2;
            border-radius: 1em !important;
            height: 100% !important;
            background-color: #dde6ed1a !important;
            box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px !important;
        }

        .main-content-long-text {
            color: #8A2BE2 !important;
            border: none !important;

        }

        .text-areas-indent {
            text-indent: 2em;
        }

        .main-content-long-text::placeholder {
            color: #8A2BE2 !important;
            /* text-indent: 2em !important; */
        }

        .setEdge1,
        .setEdge2 {
            border-right: 1px solid #8A2BE2 !important;
            border-bottom-width: 50% !important;
            box-shadow: rgb(204, 219, 232) 3px 3px 6px 0px inset, rgba(255, 255, 255, 0.5) -3px -3px 6px 1px inset !important;
        }

        .add-button-2 {
            float: right;

        }

        .layout01_gird {
            display: grid;
            grid-template-columns: 0.75fr 1.25fr;
        }

        .allCOntent {
            height: fit-content;
        }

        .subLayout2Contents2 div {
            height: fit-content !important;
        }

        .setborder {
            border-radius: 0.5em !important;
        }

        .addContent-a {
            text-decoration: none !important;
            transition-duration: 0.3s;
        }

        .addContent-a:hover {
            color: #0d57d6 !important;
            transition: 0.3s;
        }

        .lesson-bar {
            border-left: 0.25em solid #387bef !important;
            padding-left: 0.5em !important;
        }

        .comment-table tr th {
            padding-top: 1em !important;
            padding-bottom: 1em !important;
            border-bottom: 1px solid #ced4daa0;
            color: #5a6a85 !important;

        }

        .comment-table tr td {
            padding-top: 1em !important;
            /* padding-bottom: 1em !important; */
            /* border-bottom: 1px solid #ced4daa0; */

        }

        .comment {
            display: flex;
            align-items: center;
            padding: 15px;
            max-height: 104px;
        }

        .comment img {
            width: 50px;
            height: 50px;
            border-radius: 25%;
            margin-right: 1em !important;
            object-fit: cover;

        }

        /* .comment .content {
      flex-grow: 1;
    } */

        .comment-color {
            color: #7C8FAC !important;
        }

        .fancyBox {
            width: 10%;
            height: auto;
        }

        .comment-files {
            width: 125px;
            height: 125px;
            margin-right: 1em !important;
            border-radius: 10%;
        }

        .commentOption {
            position: absolute;

        }

        .optionComment:hover {
            color: #003ba1 !important;
            transition: 0.3s;
        }

        .reply-comment {
            display: none;
        }

        .question_form_top_name {
            font-size: 32px;
            font-weight: 400;
            line-height: 40px;
            line-height: 135%;
            width: 100%;
            border: none;
            outline: none;
            margin-bottom: 0.5em !important;
            border-bottom: 1px lightgray solid;

        }

        .dark .question_form_top_name {
            background-color: #333 !important;
            color: white;
            border-bottom: 1px #444 solid;
        }

        .question_form_top_desc {
            font-weight: 400;
            width: 100%;
            border: none;
            outline: none;
            border-bottom: 1px solid lightgray;
            color: gray;
            background: transparent;
            overflow-wrap: break-word;


        }

        .dark .question_form_top_desc {
            border-bottom: 1px solid #444;
            background-color: #333;
        }

        .input-question {
            border: none;
            outline: none;
            border-bottom: 1px lightgray solid;
            /* margin: 0 24px; */
        }

        .dark .input-question {
            border: none;
            outline: none;
            background-color: #333;
            border-bottom: 1px #444 solid;
            color: var(--text-color);
        }


        .header {
            position: relative !important;
        }

        .question_form_top_name:focus,
        .dark .question_form_top_name:focus,
        .question_form_top_desc:focus,
        .dark .question_form_top_desc:focus {
            border-bottom: 2px solid rgb(103, 58, 183) !important;
        }

        .add_footer {
            -webkit-box-align: center;
            -webkit-align-items: center;
            align-items: center;
            display: -webkit-box;
            display: -webkit-flex;
            display: flex;
            border-top: 1px solid rgb(218, 220, 224);
            height: 64px;
            -webkit-box-pack: justify;
            -webkit-justify-content: space-between;
            justify-content: space-between;
            /* margin: 0 24px; */
        }

        .add_question_bottom {
            padding-top: 1rem;

        }

        .btn {
            transition: transform 0.1s ease;
            /* เพิ่มการเปลี่ยนแปลงเพื่อให้ดูเรียบ */
        }

        .btn:active {
            transform: scale(1.2);
            /* ขยายขนาดปุ่มเมื่อกด */
        }

        .grey {
            color: gray !important;
        }

        .dark .grey {
            color: lightgray !important
        }

        .dark .form-check,
        .dark .modal-header,
        .dark .modal-body,
        .dark .modal-footer,
        .dark .modal-content,
        .dark .modal-dialog {
            background-color: #333;
        }

        .modal-header .modal-title {
            flex: 1;
            text-align: center;
        }

        .modal-body,
        .modal-footer {
            border-top: none;

        }

        .modal-body {
            margin: 0 24px;
        }

        .dark .modal-header {
            border-bottom: 1px solid #555;
        }


        .grab:hover {
            cursor: grab;
        }

        .close {
            background: none;
            border: none;
            font-size: 1.6rem;
            color: var(--text-color);
            text-decoration: none;
        }

        .close span {
            text-decoration: none;
            cursor: pointer;
        }

        .shortAnswerContainer {
            display: flex;
            justify-content: center;
        }

        .bi-check2 {
            color: greenyellow !important;
            font-size: 1.2rem;
            margin-top: 0.2rem;
        }

        select,
        .input-number {
            border: 1px solid lightgray;
        }

        .question:active {
            /* background-color: #b2ebf2; */
            /* เปลี่ยนสีพื้นหลังเมื่อกำลังลาก */
            box-shadow: 0 8px 24px #8A2BE2;
            /* เงาเมื่อถูกลาก */
        }

        .dragging {
            opacity: 0.8;
            /* ลดความโปร่งแสงขณะลาก */
        }

        @media screen and (max-width: 768px) {
            body {
                width: 120%;
            }

            .above-nav-status {
                display: none;
            }

        }
    </style>
</head>

<body onload="setTimeLimit()">
    <%- include("./partials/quiz_nav.ejs")%>




        <!-- modal select image  -->
        <div class="modal fade bd-example-modal-lg" id="exampleModalLong" tabindex="-1" role="dialog"
            aria-labelledby="exampleModalLongTitle" aria-hidden="true">
            <div class="modal-dialog modal-lg" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLongTitle">เลือกรูปภาพ</h5>
                        <span class="close"><a class="close" data-dismiss="modal" aria-label="Close"></span>
                        <span aria-hidden="true">&times;</span>
                        </a>
                    </div>
                    <div class="modal-body">
                        <form id="formimage">
                            <input class="form-control form-control-lg" style="width: 100%;" id="avatar" type="file"
                                accept="image/*" onchange="readURL(this);">
                            <input type="submit" id="submit_image" value="Submit" style="display: none;" />
                        </form>
                        <img id="preview_image" src="" alt="your image" style="height: 100px; display: none;">
                        <div class="loader" id="loader" style="display: none;">
                            <svg class="svgloader" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1728 1296">
                                <rect x="153.55" y="492.48" width="311.04" height="311.04" fill="#ff499e" />
                                <rect x="519.55" y="492.48" width="311.04" height="311.04" fill="#99267e" />
                                <rect x="883.41" y="492.48" width="311.04" height="311.04" fill="#9c5ea8" />
                                <rect x="1263.41" y="492.48" width="311.04" height="311.04" fill="#798fd4" />
                            </svg>
                        </div>
                        <input type="range" name="" id="imagerange" min="50" max="400" value="100"
                            oninput="changesize('preview_image',this)">
                        <div id="status"></div>


                    </div>
                    <div class="modal-footer">

                        <button type="button" class="btn btn-primary" onclick="savechanges()"
                            data-dismiss="modal">บันทึก</button>
                    </div>
                </div>
            </div>
        </div>




        <!-- FORM CONTENT -->
        <div class="container" id="main_container">

            <form action="/search" id="form" method="post">
                <div class="questions">



                    <!-- Image   -->

                    <div class="question" id="themeimageid" style="display: none; max-height: 105px;     height: 155px;
                  border: none;">

                        <img id="themeImageID_" src="" alt="">
                    </div>


                    <!-- title  -->

                    <div class="question">
                        <p class="fw-normal fs-6 lesson-bar ms-2">แบบทดสอบ</p>

                        <form id="quizForm">

                            <div class="input-container mx-2">
                                <p class="mx-2">
                                <div class="question_form_top_name" id="quizname" contenteditable="true" name="quizname"
                                    oninput="saveQuizSettings(); togglePlaceholder('quizname', 'ชื่อแบบทดสอบ')"
                                    onfocus="removePlaceholder('quizname')"
                                    onblur="addPlaceholder('quizname', 'ชื่อแบบทดสอบ')">
                                    <%=quiz.quizname%>
                                </div>
                                </p>
                            </div>
                            <p class="mx-2" style="color: gray;">
                            <div class="input-container mx-2">
                                <p>
                                <div class="question_form_top_desc" id="quizdescription" contenteditable="true"
                                    style="color: gray !important;" name="quizdescription"
                                    oninput="saveQuizSettings(); togglePlaceholder('quizdescription', 'คำอธิบายแบบทดสอบ')"
                                    onfocus="removePlaceholder('quizdescription')"
                                    onblur="addPlaceholder('quizdescription', 'คำอธิบายแบบทดสอบ')">
                                    <%=quiz.quizdescription%>
                                </div>
                                </p>
                            </div>
                            </p>



                            <p class="fw-normal w-auto fs-6 " style="margin-left: 0.5em !important;">
                                เวลาในการทำแบบทดสอบ:
                                <span class="fw-normal fs-6 text-primary" style="margin-right: 1em !important;">
                                    <select class="select " style="font-size: 0.9rem; max-width: 10em;" id="timeLimit"
                                        name="timeLimit" required onchange="saveQuizSettings()"
                                        data-selected-value='<%= JSON.stringify(quiz.timeLimit) %>'>
                                        <option value='{"value":"15min","display":"15 นาที"}'>15 นาที</option>
                                        <option value='{"value":"30min","display":"30 นาที"}'>30 นาที</option>
                                        <option value='{"value":"1hour","display":"1 ชั่วโมง"}'>1 ชั่วโมง</option>
                                        <option value='{"value":"1h30min","display":"1 ชั่วโมง 30 นาที"}'>1 ชั่วโมง 30
                                            นาที
                                        </option>
                                        <option value='{"value":"2hours","display":"2 ชั่วโมง"}'>2 ชั่วโมง</option>
                                        <option value='{"value":"3hours","display":"3 ชั่วโมง"}'>3 ชั่วโมง</option>
                                    </select>

                                </span>

                                จำนวนครั้งที่เข้าทำได้:


                                <span class="fw-normal fs-6 text-primary" style="margin-right: 1em !important;">
                                    <input type="number" value="<%=quiz.attemptLimit%>" min="1" class="input-number"
                                        id="attemptLimit" style="max-width: 3em; text-align: center; font-size: 0.9rem;"
                                        oninput="saveQuizSettings()" name="attemptLimit" />
                                </span>

                                <!-- จำนวนข้อ: 
  
  
                  <span class="fw-normal fs-6 text-primary" style="margin-right: 1em !important;">0 ข้อ</span> -->

                            </p><br>


                            <div class="d-flex">
                                <div class="d-flex w-50">


                                </div>
                                <!-- อยากทำปุม่ปล่อย พอกดแล้วมีเลือกวันหมดเขตทำ แล้วเปลี่ยนเป็นปุ่มหยุดปล่อยแทน
                  มีบอกสถานะว่า ปล่อยรึยัง
                  -->
                                <div class="d-flex w-50 justify-content-end">
                                    <!-- <button type="submit" class="btn btn-primary">บันทึก</button> -->
                                </div>
                            </div>
                        </form>
                        <br>
                        <hr><br>
                        <p class="fw-normal w-auto fs-6 mx-2">สถานะ:
                            <span class="fw-normal fs-6 text-danger"
                                style="margin-right: 1em !important;">ยังไม่ได้ปล่อย</span>


                        </p>
                    </div>

                    <div style="margin: 0 4rem;">
                        <span id="question-count" class="me-2 fs-5">คำถามทั้งหมด: 1 คำถาม</span>
                        <span id="all-points-count" class="grey">( รวม 1 คะแนน)</span>
                    </div>

                    <div id="quizContainer">

                    </div>
                    <div class="center">
                        <button type="button" class="btn btn-outline-primary " onclick="addQuestion() ">เพิ่มคำถาม <i
                                class="bi bi-plus-circle-fill"></i></button>
                    </div>
                </div>

            </form>


            <!-- Modal -->
            <div class="modal fade" id="answerModal" tabindex="-1" role="dialog" aria-labelledby="answerModalLabel"
                aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="answerModalLabel">เฉลยคำตอบ</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close"
                                onclick="closeModal()">
                                <span aria-hidden="true"><i class="bi bi-x"></i></span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <div id="modalContent"></div>
                        </div>
                        <div class="modal-footer">

                            <button type="button" class="btn btn-primary" onclick="saveAnswer()">บันทึก</button>
                        </div>
                    </div>
                </div>
            </div>



            <!-- Setting *********** -->
            <div class="setting_menu" style="display: none;">
                <!-- Tabs navs -->
                <ul class="nav nav-tabs nav-fill mb-3 addition" id="ex1" role="tablist">
                    <li class="nav-item" role="presentation">
                        <a class="nav-link active" id="ex2-tab-1" data-mdb-toggle="tab" href="#ex2-tabs-1" role="tab"
                            aria-controls="ex2-tabs-1" aria-selected="true">General</a>
                    </li>
                    <li class="nav-item" role="presentation">
                        <a class="nav-link" id="ex2-tab-2" data-mdb-toggle="tab" href="#ex2-tabs-2" role="tab"
                            aria-controls="ex2-tabs-2" aria-selected="false">conformation message</a>
                    </li>
                    <li class="nav-item" role="presentation">
                        <a class="nav-link" id="ex2-tab-3" data-mdb-toggle="tab" href="#ex2-tabs-3" role="tab"
                            aria-controls="ex2-tabs-3" aria-selected="false">Quizzes</a>
                    </li>
                </ul>
                <!-- Tabs navs -->

                <!-- Tabs content -->
                <div class="tab-content addition" id="ex2-content">
                    <div style="
                margin-left: 17px;
            " class="tab-pane fade show active" id="ex2-tabs-1" role="tabpanel" aria-labelledby="ex2-tab-1">
                        <!-- first tab  -->



                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" value="" id="response_reciept">
                            <label class="form-check-label" for="defaultCheck1">
                                response reciept <span style="color: #9f9f9f;">'if login'</span>
                            </label>
                        </div>

                        <div>

                            <hr>
                            <h4>Require sign in :</h4>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" value="" id="limit">
                                <label class="form-check-label" for="defaultCheck1">
                                    Limit to 1 response
                                </label>
                            </div>
                        </div>


                    </div>
                    <div style="    margin-left: 12px;" class="tab-pane fade" id="ex2-tabs-2" role="tabpanel"
                        aria-labelledby="ex2-tab-2">
                        <label for="exampleInputEmail1">conformation message</label>
                        <input style="     width: 96%;   border: none; border-radius: 0px;
                  border-bottom: 1px solid black;" type="text" class="form-control" id="conformation_message"
                            aria-describedby="emailHelp" placeholder="conformation message">

                    </div>
                    <div class="tab-pane fade" id="ex2-tabs-3" role="tabpanel" aria-labelledby="ex2-tab-3">
                        <div style="display: flex;">

                            <label class="switch">
                                <input class="isquiz" id="tisquiz" type="checkbox" checked>
                                <span class="slider round"></span>
                            </label>
                            <div style="    margin-left: 16px;display: flex; flex-direction: column;">
                                <p style="    margin-bottom: -9px;">Make this quiz</p>
                                <p style="    color: #9f9f9f;
                            font-family: emoji;">Assign point values to questions and allow auto-grading.</p>
                            </div>
                        </div>
                        <hr>
                        <div class="quiz-options" id="quiz_options" style="    margin-left: 29px;">
                            <h2>Quiz Options</h2>
                            <h3 style="    font-size: 20px;
                        font-family: emoji;">Release grade:</h3>
                            <div id="release_grade">
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="flexRadioDefault"
                                        id="submissiontype1" />
                                    <label class="form-check-label" for="submissiontype1">Immediately after each
                                        submission</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="flexRadioDefault"
                                        id="submissiontype2" checked />
                                    <label class="form-check-label" for="submissiontype2">Later, after manual
                                        review</label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <hr style="color: grey ; border: 1px solid;">
                <div>
                    <button style="    margin-left: 23px;
                margin-top: 27px;" class="btn" onclick="check()">save</button>
                </div>
                <!-- Tabs content -->
            </div>


        </div>



        <!-- update modal  -->




        <div id="output"></div>



        <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.0.5/gsap.min.js"></script>
        <script src="script.js"></script>
        <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"
            integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN"
            crossorigin="anonymous"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"
            integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q"
            crossorigin="anonymous"></script>
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"
            integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl"
            crossorigin="anonymous"></script>
        <script type="text/javascript"
            src="https://cdnjs.cloudflare.com/ajax/libs/mdb-ui-kit/3.2.0/mdb.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/html2canvas@1.0.0-rc.5/dist/html2canvas.min.js">
        </script>
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>


        <script>
            let debounceTimer;

            function saveQuizSettings() {
                clearTimeout(debounceTimer);
                debounceTimer = setTimeout(() => {
                    const quizName = document.getElementById('quizname').textContent;
                    const quizDescription = document.getElementById('quizdescription').textContent;
                    // Save the quiz name and description or perform any necessary actions
                    console.log('Quiz Name:', quizName);
                    console.log('Quiz Description:', quizDescription);
                }, 300); // ปรับค่าความล่าช้าตามความเหมาะสม (300 milliseconds)
            }

            function togglePlaceholder(id, placeholder) {
                const element = document.getElementById(id);
                if (element.textContent === '') {
                    element.textContent = placeholder;
                    element.classList.add('placeholder');
                } else if (element.classList.contains('placeholder')) {
                    element.textContent = '';
                    element.classList.remove('placeholder');
                }
            }

            function removePlaceholder(id) {
                const element = document.getElementById(id);
                if (element.classList.contains('placeholder')) {
                    element.textContent = '';
                    element.classList.remove('placeholder');
                }
            }

            function addPlaceholder(id, placeholder) {
                const element = document.getElementById(id);
                if (element.textContent === '') {
                    element.textContent = placeholder;
                    element.classList.add('placeholder');
                }
            }

            document.addEventListener('DOMContentLoaded', function () {
                const selectElement = document.getElementById('timeLimit');
                const selectedValue = selectElement.getAttribute('data-selected-value');

                if (selectedValue) {
                    const options = selectElement.options;

                    for (let i = 0; i < options.length; i++) {
                        if (options[i].value === selectedValue) {
                            selectElement.selectedIndex = i;
                            break;
                        }
                    }
                }
            });


            document.addEventListener('DOMContentLoaded', function () {
                const quizForm = document.getElementById('quizForm');

                quizForm.addEventListener('submit', function (event) {
                    event.preventDefault();

                    const formData = new FormData(quizForm);
                    const data = {
                        quizId: '<%= quiz._id %>',
                        quizname: formData.get('quizname'),
                        quizdescription: formData.get('quizdescription'),
                        attemptLimit: formData.get('attemptLimit'),
                        timeLimit: JSON.parse(formData.get('timeLimit'))
                    };

                    fetch('/updateQuiz', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(data)
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                console.log('Quiz settings saved successfully');
                            } else {
                                console.error('Error saving quiz settings');
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                        });
                });
            });

            function animation() {
                if (currentImagestatue == 'failed') {
                    document.getElementById('loader').style.display = 'inherit'

                }
                else if (currentImagestatue == 'none') {
                    document.getElementById('loader').style.display = 'inherit'

                }
                else {
                    document.getElementById('loader').style.display = 'none'

                }
            }
            // upload image 
            document.getElementById('formimage').onsubmit = function (event) {
                event.preventDefault() // prevent form from posting without JS
                var xhttp = new XMLHttpRequest(); // create new AJAX request

                xhttp.onreadystatechange = function () {
                    if (this.readyState == 4 && this.status == 200) { // sucess from server
                        document.getElementById("status").innerHTML = 'Done';
                        document.getElementById("preview_image").style.display = "block";
                        currentImagestatue = this.responseText
                        console.log(currentImagestatue)
                        animation()
                    } else { // errors occured
                        document.getElementById("status").innerHTML = 'failed';
                        currentImagestatue = "none"
                        console.log(currentImagestatue)
                        animation()
                    }
                }

                xhttp.open("POST", "upload")
                var formData = new FormData()
                // the text data
                formData.append('avatar', document.getElementById('avatar').files[0]) // since inputs allow multi files submission, therefore files are in array
                xhttp.send(formData)
            }
            let questions = [
                {
                    questionText: 'คำถามไม่ระบุชื่อ',
                    options: [{ optionText: 'ตัวเลือก 1' }],
                    questionType: 'MCQ',
                    answer: false,
                    answerKey: "",
                    points: 1,
                    open: true
                }
            ];

            function changeQuestion(text, i) {
                questions[i].questionText = text;
                console.log(questions);
            }

            function changeOptionValue(text, i, j) {
                questions[i].options[j].optionText = text;
                console.log(questions);
            }

            function addQuestionType(index, type) {
                questions[index].questionType = type;
                updateQuestionCount();
                calculateTotalPoints();
                renderQuestions();
                console.log(questions);
            }

            function removeOption(i, j) {
                var RemoveOptionQuestion = [...questions];
                if (RemoveOptionQuestion[i].options.length > 1) {
                    RemoveOptionQuestion[i].options.splice(j, 1);
                    setQuestions(RemoveOptionQuestion);
                    console.log(i + "__" + j);

                    // ใช้ requestAnimationFrame เพื่อให้ DOM อัพเดตทันที
                    requestAnimationFrame(() => {
                        renderQuestions();
                    });
                }
            }



            function addOption(i) {
                if (questions[i].options.length < 31) {
                    questions[i].options.push({ optionText: `ตัวเลือก ${questions[i].options.length + 1}` });

                    renderQuestions();
                } else {
                    console.log("Max 31 Options");
                }
            }

            function deleteQuestion(i) {
                if (questions.length > 1) {
                    questions.splice(i, 1);
                    updateQuestionCount();
                    calculateTotalPoints();
                    renderQuestions();
                }
            }

            function addQuestion() {
                questions.push({
                    questionText: 'คำถาม',
                    options: [{ optionText: 'ตัวเลือก 1' }],
                    questionType: 'MCQ',
                    points: 1,
                    open: true
                });
                updateQuestionCount();

                calculateTotalPoints();
                renderQuestions();
            }

            function copyQuestion(index) {
                const copiedQuestion = JSON.parse(JSON.stringify(questions[index]));
                questions.splice(index + 1, 0, copiedQuestion); // แทรกคำถามที่คัดลอกในตำแหน่งถัดไปของคำถามต้นฉบับ
                updateQuestionCount();
                calculateTotalPoints();
                renderQuestions();
            }


            function setQuestions(newQuestions) {
                questions = newQuestions;
                console.log('State updated:', questions); // ตรวจสอบว่าการอัพเดต state ถูกต้อง
                updateQuestionCount();
                initializeSortable();
                calculateTotalPoints();
                renderQuestions();
            }


            function toggleImageButton(element, show) {
                var formCheck = element.closest('.form-check');
                if (show) {
                    formCheck.classList.add('focused');
                } else {
                    formCheck.classList.remove('focused');
                }
            }

            function updateQuestionCount() {
                const questionCountElement = document.getElementById('question-count');
                questionCountElement.innerHTML = ` ${questions.length} คำถาม`;
            }

            questions.forEach(question => {
                if (question.questionType === 'checkbox' && !Array.isArray(question.answer)) {
                    question.answer = [];
                }
            });

            function calculateTotalPoints() {
                const totalPoints = questions.reduce((sum, question) => sum + question.points, 0);
                document.getElementById('all-points-count').innerText = `( ${totalPoints} คะแนน)`;
            }
            function updateQuestionPoints(index, newPoints) {
                // ปรับคะแนนในอาร์เรย์ questions
                questions[index].points = Number(newPoints);
                // คำนวณคะแนนรวมใหม่
                calculateTotalPoints();
            }

            function addAnswer(index) {
                console.log("addAnswer called with index:", index);
                currentQuestionIndex = index;
                const modalContent = document.getElementById('modalContent');
                const question = questions[index];
                console.log("Question data:", question);

                let answerContent = '';

                if (question.questionType === 'MCQ') {
                    answerContent = `
            ${question.options.map((option, i) => `
                <div class="form-check" style="display: flex; align-items: center;">
                    <input class="form-check-input mt-0" type="radio" name="correctAnswer" id="correctAnswer_${i}" value="${i}" ${i === question.answer ? 'checked' : ''}>
                    <label class="form-check-label ms-2" for="correctAnswer_${i}">
                        ${option.optionText}
                    </label>
                    <i class="bi bi-check2 ms-2 ${i === question.answer ? '' : 'd-none'}"></i>
                </div>
            `).join('')}
        `;
                } else if (question.questionType === 'checkbox') {
                    answerContent = `
            ${question.options.map((option, i) => `
                <div class="form-check" style="display: flex; align-items: center;">
                    <input class="form-check-input mt-0" type="checkbox" name="correctAnswer" id="correctAnswer_${i}" value="${i}" ${Array.isArray(question.answer) && question.answer.includes(i) ? 'checked' : ''}>
                    <label class="form-check-label ms-2" for="correctAnswer_${i}">
                        ${option.optionText}
                    </label>
                    <i class="bi bi-check2 ms-2 ${Array.isArray(question.answer) && question.answer.includes(i) ? '' : 'd-none'}"></i>
                </div>
            `).join('')}
        `;
                } else if (question.questionType === 'Paragraph') {
                    answerContent = `
            <textarea placeholder='บรรยายไม่จำเป็นต้องระบุคำตอบ คุณสามารถดูคำตอบและให้คะแนนทีหลังได้' class="form-control mt-2" name="answer_${index}" rows="2" style='width:100%' disabled>${question.answerText || ''}</textarea>
        `;
                } else if (question.questionType === 'short_answ') {
                    answerContent = `
            <div id="shortAnswerContainer">
                ${question.answerTexts ? question.answerTexts.map((text, i) => `
                    <div class="short-answer-group" style="display: flex; align-items: center;">
                        <textarea placeholder='เพิ่มคำตอบที่ถูกต้อง' class="form-control my-2" name="answer_${index}_${i}" rows="1" style='width:84%'>${text}</textarea>
                        <span class='close' style="font-size:1.6rem; margin-left: 10px;">
                            <a onclick="removeShortAnswer(${i}, ${index})"><i class="bi bi-x"></i></a>
                        </span>
                    </div>
                `).join('') : ''}
            </div>
            <a class="double_item" style="color:primary; cursor: pointer;margin-left:0 !important" onclick="addShortAnswer(${index})">เพิ่มคำตอบ</a>
           
        `;
                }

                modalContent.innerHTML = `
        <div style="display: flex; align-items: center; justify-content: space-between;">
            <h6 style="margin: 0;">${question.questionText}</h6>
            <div style="display: flex; align-items: center;">
                <input type="number" class="form-control" id="questionPoints" value="${question.points}" min="1" style="width: 4rem;height: 2rem; font-size:15px;">
                <span style="margin: 0; margin-left: 10px;font-size:15px; color:lightgray;">คะแนน </span>
            </div>
        </div>
        <div><br>
            ${answerContent}
        </div>
    `;
                console.log("Modal content set:", modalContent.innerHTML);
                $('#answerModal').modal('show');
            }

            function closeModal() {
                $('#answerModal').modal('hide');
            }

            function addShortAnswer(index) {
                const container = document.getElementById('shortAnswerContainer');
                const newIndex = container.children.length;
                const newAnswer = document.createElement('div');
                newAnswer.classList.add('short-answer-group');
                newAnswer.style.display = 'flex';
                newAnswer.style.alignItems = 'center';
                newAnswer.innerHTML = `
        <textarea placeholder='เพิ่มคำตอบที่ถูกต้อง' class="form-control my-2" name="answer_${index}_${newIndex}" rows="1" style='width:84%'></textarea>
       <span class='close ms-2 mt-2' style="font-size:1.6rem;" > <a onclick="removeShortAnswer(${newIndex}, ${index}) "><i class="bi bi-x"></i></a></span>
    `;
                container.appendChild(newAnswer);
            }

            function removeShortAnswer(childIndex, index) {
                const container = document.getElementById('shortAnswerContainer');
                const answerGroups = container.querySelectorAll('.short-answer-group');
                if (answerGroups[childIndex]) {
                    container.removeChild(answerGroups[childIndex]);
                }
            }

            function saveAnswer() {
                const question = questions[currentQuestionIndex];
                const points = document.getElementById('questionPoints').value;
                question.points = parseInt(points, 10);

                if (question.questionType === 'MCQ') {
                    const correctAnswer = document.querySelector('input[name="correctAnswer"]:checked').value;
                    question.answer = parseInt(correctAnswer, 10);
                } else if (question.questionType === 'checkbox') {
                    const selectedAnswers = Array.from(document.querySelectorAll('input[name="correctAnswer"]:checked'))
                        .map(input => parseInt(input.value, 10));
                    question.answer = selectedAnswers;
                } else if (question.questionType === 'Paragraph' || question.questionType === 'short_answ') {
                    const answerTexts = document.querySelectorAll(`#shortAnswerContainer textarea`);
                    question.answerTexts = Array.from(answerTexts).map(textarea => textarea.value);
                }

                $('#answerModal').modal('hide');
                updateQuestionCount();
                initializeSortable();
                calculateTotalPoints();
                renderQuestions();
            }


            let sortableInitialized = false; // ตัวแปรเพื่อเช็คว่า Sortable ถูกติดตั้งหรือยัง

            function renderQuestions() {
                const container = document.getElementById('quizContainer');
                container.innerHTML = '';

                questions.forEach((question, i) => {
                    const questionDiv = document.createElement('div');
                    questionDiv.className = 'question grab';
                    questionDiv.id = `question_${i}`;

                    questionDiv.innerHTML = `
            <div class="first">
                <input class="input-question" type="text" style="width: 60%;" name="questions_${i}" value="${question.questionText}" oninput="changeQuestion(this.value, ${i})">
                <button type="button" class="btn imagebutton" data-toggle="modal" data-target="#exampleModalLong" onclick="selectedbody('question_${i}')">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-image" viewBox="0 0 16 16">
                        <path d="M6.002 5.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z"/>
                        <path d="M2.002 1a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2h-12zm12 1a1 1 0 0 1 1 1v6.5l-3.777-1.947a.5.5 0 0 0-.577.093l-3.71 3.71-2.66-1.772a.5.5 0 0 0-.63.062L1.002 12V3a1 1 0 0 1 1-1h12z"/>
                    </svg>
                </button>
                <select class="select" name="Type_${i}" style="width: 18rem;" onchange="addQuestionType(${i}, this.value)">
                    <option value="MCQ" ${question.questionType === 'MCQ' ? 'selected' : ''}>อัตนัยคำตอบเดียว</option>
                    <option value="checkbox" ${question.questionType === 'checkbox' ? 'selected' : ''}>อัตนัยหลายคำตอบ</option>
                    <option value="Paragraph" ${question.questionType === 'Paragraph' ? 'selected' : ''}>บรรยาย</option>
                    <option value="short_answ" ${question.questionType === 'short_answ' ? 'selected' : ''}>เติมคำตอบสั้นๆ</option>
                </select>
            </div>
            <div class="options" id="options_${i}">
                ${renderOptions(question, i)}
            </div>
            ${question.questionType !== 'Paragraph' && question.questionType !== 'short_answ' ? `
                <a class="double_item" style="color:primary; cursor: pointer;" onclick="addOption(${i})">เพิ่มตัวเลือก</a>
            ` : ''}
            ${question.questionType === 'short_answ' ? `<div class="">คำตอบที่ถูกต้อง: <span style='color:yellowgreen;'>${question.answerTexts ? question.answerTexts.join(', ') : ''}</span></div>` : ''}
            <br>
            <div class="add_footer">
                <div className='add_question_bottom_left'>
                    <a class="answer_key"
                    style="color:primary; cursor: pointer; display: inline-flex; padding: 2px;"
                    onclick="addAnswer(${i})"><i class="bi bi-check2-square me-1"></i> เฉลยคำตอบ</a><span style="color:lightgray; margin-left: 1rem;">(${question.points} คะแนน)</span>
                </div>
                <div class="add_question_bottom">
                    <button type="button" class="btn btn-outline-secondary me-2" onclick="copyQuestion(${i})"><i class="bi bi-copy"></i></button>
                    <button type="button" class="btn btn-outline-danger" onclick="deleteQuestion(${i})"><i class="bi bi-trash3-fill"></i></button>
                </div>
            </div>
        `;

                    container.appendChild(questionDiv);
                });

                updateQuestionCount();
                calculateTotalPoints();

                if (!sortableInitialized) {
                    initializeSortable(); // เรียกใช้งาน Sortable แค่ครั้งแรก
                    sortableInitialized = true; // ทำเครื่องหมายว่าได้ติดตั้ง Sortable แล้ว
                }
            }

            function initializeSortable() {
                const container = document.getElementById('quizContainer');
                Sortable.create(container, {
                    animation: 150,
                    onStart: function (evt) {
                        const draggedItem = evt.item;
                        draggedItem.classList.add('dragging'); // เพิ่มคลาส dragging
                        draggedItem.style.zIndex = 1000; // เพิ่ม z-index เพื่อให้แน่ใจว่าคำถามที่ลากอยู่ด้านบน
                    },
                    onEnd: function (evt) {
                        const oldIndex = evt.oldIndex;
                        const newIndex = evt.newIndex;
                        const movedQuestion = questions.splice(oldIndex, 1)[0];
                        questions.splice(newIndex, 0, movedQuestion);
                        renderQuestions();
                    },
                    onRemove: function (evt) {
                        const draggedItem = evt.item;
                        draggedItem.classList.remove('dragging'); // ลบคลาส dragging
                        draggedItem.style.zIndex = ''; // รีเซ็ต z-index
                    }
                });
            }

            function renderOptions(question, questionIndex) {
                if (question.questionType === 'MCQ' || question.questionType === 'checkbox') {
                    return question.options.map((option, i) => `
            <div class="form-check p-0" style="display: flex; align-items: center;">
                <input class="input_check" type="${question.questionType === 'MCQ' ? 'radio' : 'checkbox'}" name="Answ_${questionIndex}" value="${i}" disabled>
                <input type="text" name="option_${questionIndex}_${i}" value="${option.optionText}" onfocus="showImageButton(${questionIndex}, ${i})" onblur="hideImageButton(${questionIndex}, ${i})" oninput="changeOptionValue(this.value, ${questionIndex}, ${i})">
                <i class="bi bi-check2 ms-2 mt-2 ${question.questionType === 'MCQ' && i === question.answer ? '' : (question.questionType === 'checkbox' && Array.isArray(question.answer) && question.answer.includes(i) ? '' : 'd-none')}" ></i>
                <button type="button" class="btn imagebutton" id="imageButton_${questionIndex}_${i}" data-toggle="modal" data-target="#exampleModalLong" onclick="selectedbody('question_${questionIndex}_${i}') " style="display: none;">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-image" viewBox="0 0 16 16">
                        <path d="M6.002 5.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z"/>
                        <path d="M2.002 1a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2h-12zm12 1a1 1 0 0 1 1 1v6.5l-3.777-1.947a.5.5 0 0 0-.577.093l-3.71 3.71-2.66-1.772a.5.5 0 0 0-.63.062L1.002 12V3a1 1 0 0 1 1-1h12z"/>
                    </svg>
                </button>
                <a onclick="removeOption(${questionIndex}, ${i})" style="margin-top:8px; margin-left: 8px; font-size:1.6rem;"><i class="bi bi-x"></i></a>
            </div>
        `).join('');
                } else if (question.questionType === 'Paragraph') {
                    return `<textarea class="form-control  mt-3 mb-2" name="answer_${questionIndex}" rows="1" style="width:90%;" disabled placeholder="ข้อความคำตอบแบบยาว"></textarea>`;
                } else if (question.questionType === 'short_answ') {
                    return `<textarea class="form-control  mt-3 mb-2" name="answer_${questionIndex}" rows="1" style="width:50%;" disabled placeholder="ข้อความคำตอบสั้นๆ"></textarea>`;
                }
                return '';
            }

            document.addEventListener('DOMContentLoaded', () => {
                updateQuestionCount();
                calculateTotalPoints();
                updateQuestionPoints
                renderQuestions();

            });
            function showImageButton(questionIndex, optionIndex) {
                const button = document.getElementById(`imageButton_${questionIndex}_${optionIndex}`);
                if (button) {
                    button.style.display = 'inline-block';
                }
            }

            function hideImageButton(questionIndex, optionIndex) {
                const button = document.getElementById(`imageButton_${questionIndex}_${optionIndex}`);
                if (button) {
                    button.style.display = 'none';
                }
            }

        </script>

</body>

</html>